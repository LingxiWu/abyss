jobs:
- job: linux_clang6
  pool:
    vmImage: Ubuntu 16.04
  steps:
  - script: |
      sudo apt-get update -qq
      sudo apt-get install -qq software-properties-common
      sudo add-apt-repository -y ppa:ubuntu-toolchain-r/test
      sudo apt-get update -qq
      sudo apt-get install -qq autoconf automake gcc g++ libboost-dev libgtest-dev libopenmpi-dev libsparsehash-dev make pandoc
    displayName: Install common
  - script: sudo apt-get install -qq clang-6.0
    displayName: Install clang-6.0
  - script: |
      ./autogen.sh
      ./configure CC=clang-6.0 CXX=clang++-6.0 --with-mpi=/usr/lib/openmpi
      make -j12 distcheck
    displayName: Compiling ABySS with clang 6.0

- job: linux_gcc5
  pool:
    vmImage: Ubuntu 16.04
  steps:
  - script: |
      sudo apt-get update -qq
      sudo apt-get install -qq software-properties-common
      sudo add-apt-repository -y ppa:ubuntu-toolchain-r/test
      sudo apt-get update -qq
      sudo apt-get install -qq autoconf automake gcc g++ libboost-dev libgtest-dev libopenmpi-dev libsparsehash-dev make pandoc
    displayName: Install common
  - script: sudo apt-get install -qq gcc-5 g++-5
    displayName: Install gcc-5
  - script: |
      ./autogen.sh
      ./configure CC=gcc-5 CXX=g++-5 --with-mpi=/usr/lib/openmpi
      make -j12 distcheck
    displayName: Compiling ABySS with gcc-5

- job: linux_gcc6
  pool:
    vmImage: Ubuntu 16.04
  steps:
  - script: |
      sudo apt-get update -qq
      sudo apt-get install -qq software-properties-common
      sudo add-apt-repository -y ppa:ubuntu-toolchain-r/test
      sudo apt-get update -qq
      sudo apt-get install -qq autoconf automake gcc g++ libboost-dev libgtest-dev libopenmpi-dev libsparsehash-dev make pandoc
    displayName: Install common
  - script: sudo apt-get install -qq gcc-6 g++-6
    displayName: Install gcc-6
  - script: |
      ./autogen.sh
      ./configure CC=gcc-6 CXX=g++-6 --with-mpi=/usr/lib/openmpi
      make -j12 distcheck
    displayName: Compiling ABySS with gcc-6

- job: linux_gcc7
  pool:
    vmImage: Ubuntu 16.04
  steps:
  - script: |
      sudo apt-get update -qq
      sudo apt-get install -qq software-properties-common
      sudo add-apt-repository -y ppa:ubuntu-toolchain-r/test
      sudo apt-get update -qq
      sudo apt-get install -qq autoconf automake gcc g++ libboost-dev libgtest-dev libopenmpi-dev libsparsehash-dev make pandoc
    displayName: Install common
  - script: sudo apt-get install -qq gcc-7 g++-7
    displayName: Install gcc-7
  - script: |
      ./autogen.sh
      ./configure CC=gcc-7 CXX=g++-7 --with-mpi=/usr/lib/openmpi
      make -j12 distcheck
    displayName: Compiling ABySS with gcc-7

- job: linux_gcc8
  pool:
    vmImage: Ubuntu 16.04
  steps:
  - script: |
      sudo apt-get update -qq
      sudo apt-get install -qq software-properties-common
      sudo add-apt-repository -y ppa:ubuntu-toolchain-r/test
      sudo apt-get update -qq
      sudo apt-get install -qq autoconf automake gcc g++ libboost-dev libgtest-dev libopenmpi-dev libsparsehash-dev make pandoc
    displayName: Install common
  - script: sudo apt-get install -qq gcc-8 g++-8
    displayName: Install gcc-8
  - script: |
      ./autogen.sh
      ./configure CC=gcc-8 CXX=g++-8 --with-mpi=/usr/lib/openmpi
      make -j12 distcheck
    displayName: Compiling ABySS with gcc-8

- job: clang_format
  pool:
    vmImage: Ubuntu 16.04
  steps:
  - script: |
      sudo apt-get update -qq
      sudo apt-get install -qq software-properties-common
      sudo add-apt-repository -y ppa:ubuntu-toolchain-r/test
      sudo apt-get update -qq
      sudo apt-get install -qq autoconf automake gcc g++ libboost-dev libgtest-dev libopenmpi-dev libsparsehash-dev make pandoc
    displayName: Install common
  - script: |
      ./autogen.sh
      ./configure
    displayName: Configuring
  - script: |
      curl https://apt.llvm.org/llvm-snapshot.gpg.key | sudo apt-key add -
      sudo apt-add-repository "deb http://apt.llvm.org/xenial/ llvm-toolchain-xenial-8 main"
      sudo apt-get update
      sudo apt-get install -y --no-install-recommends clang-format-8
      sudo ln -s clang-format-8 /usr/bin/clang-format
    displayName: Install clang-format
  - script: make clang-format
    displayName: Run clang-format

- job: linux_gcc8_32-bit
  pool:
    vmImage: Ubuntu 16.04
  steps:
  - script: |
      sudo apt-get update -qq
      sudo apt-get install -qq software-properties-common
      sudo add-apt-repository -y ppa:ubuntu-toolchain-r/test
      sudo apt-get update -qq
      sudo apt-get install -qq autoconf automake gcc g++ libboost-dev libgtest-dev libopenmpi-dev libsparsehash-dev make pandoc
    displayName: Install common
  - script: sudo apt-get install -qq gcc-8 g++-8
    displayName: Install gcc-8
  - script: sudo apt-get install gcc-multilib g++-multilib
    displayName: Install 32-bit compilation support
  - script: |
      ./autogen.sh
      ./configure CC=gcc-8 CXX=g++-8 --build=i686-linux-gnu "CFLAGS=-m32" "CXXFLAGS=-m32" "LDFLAGS=-m32" --with-mpi=/usr/lib/openmpi
      make -j12 distcheck
    displayName: Compiling ABySS with gcc-8

- job: macOS_clang6
  pool:
    vmImage: macOS-10.14
  steps:
  - script: |
      brew update
      brew install automake boost@1.70 openmpi google-sparsehash make pandoc ghc
    displayName: Install common
  - script: brew install gcc@8
    displayName: Install gcc
  - script: |
      ./autogen.sh
      ./configure CC=gcc-8 CXX=g++-8 --with-boost=/usr/local/Cellar/boost/1.70.0/include/ --with-mpi=/usr/local/Cellar/open-mpi/4.0.1_2/ CPPFLAGS=-I/usr/local/Cellar/google-sparsehash/2.0.3/include/
      make -j12 distcheck
    displayName: Compiling ABySS with gcc 8
