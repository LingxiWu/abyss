jobs:
- job: linux_gcc8
  pool:
    vmImage: Ubuntu 16.04
  steps:
  - script: |
      sudo apt-get update -qq
      sudo apt-get install -qq software-properties-common
      sudo add-apt-repository -y ppa:ubuntu-toolchain-r/test
      sudo apt-get update -qq
      sudo apt-get install -qq autoconf automake gcc g++ libboost-dev libgtest-dev libopenmpi-dev libsparsehash-dev make pandoc
    displayName: Install common
  - script: sudo apt-get install -qq gcc-8 g++-8
    displayName: Install gcc-8
  - script: |
      ./autogen.sh
      ./configure CC=gcc-8 CXX=g++-8 --with-mpi=/usr/lib/openmpi
      make -j12 distcheck
    displayName: Compiling ABySS with gcc-8

- job: clang_format
  pool:
    vmImage: Ubuntu 16.04
  steps:
  - script: |
      sudo apt-get update -qq
      sudo apt-get install -qq software-properties-common
      sudo add-apt-repository -y ppa:ubuntu-toolchain-r/test
      sudo apt-get update -qq
      sudo apt-get install -qq autoconf automake gcc g++ libboost-dev libgtest-dev libopenmpi-dev libsparsehash-dev make pandoc
    displayName: Install common
  - script: |
      ./autogen.sh
      ./configure
    displayName: Configuring
  - script: |
      curl https://apt.llvm.org/llvm-snapshot.gpg.key | sudo apt-key add -
      sudo apt-add-repository "deb http://apt.llvm.org/xenial/ llvm-toolchain-xenial-8 main"
      sudo apt-get update
      sudo apt-get install -y --no-install-recommends clang-format-8
      sudo ln -s clang-format-8 /usr/bin/clang-format
    displayName: Install clang-format
  - script: make clang-format
    displayName: Run clang-format
